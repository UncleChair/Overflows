name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
          cache-dependency-path: 'backend/go.mod'
      
      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: 20.15.1

      - name: Set up GF
        run: |
          wget -O gf "https://github.com/gogf/gf/releases/latest/download/gf_$(go env GOOS)_$(go env GOARCH)" &&
          chmod +x gf &&
          ./gf install -y &&
          rm ./gf
      
      - name: Set up env
        run: |
          export GO111MODULE=on &&
          sudo apt-get install -y libayatana-appindicator3-dev &&
          cp ./backend/manifest/config/example.config.yaml ./backend/manifest/config/config.yaml

      - name: Build frontend
        run: |
          cd frontend &&
          npm install &&
          npm run build

      - name: Build backend
        run: |
          cd backend &&
          gf pack resource,manifest/config,manifest/database/SQLite/migrations internal/packed/build_pack_data.go --keepPath=true -y &&
          go build -o temp/overflows_linux_amd64 main.go &&
          GOOS=windows GOARCH=amd64 go build -o temp/overflows_windows_amd64.exe main.go &&
          gf build &&
          mv temp/overflows.exe temp/overflows_windows_amd64_gui.exe

      - name: Create Github Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name:     ${{ github.ref }}
          name: Overflows Release ${{ github.ref_name }}
          draft:        false
          prerelease:   false
      
      - name: Upload Release Asset
        id:   upload-release-asset
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          asset_paths: '["backend/temp/overflows_*"]'
